#####################################################################
#   V0 Display
#####################################################################
[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_display-if00
restart_method: command

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# # Set the direction of the encoder wheel
# #   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
# #   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
# #encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
# #x_offset: 2
# #   Use X offset to shift the display towards the right. Value can be 0 to 3
# #vcomh: 0
# #   Set the Vcomh value on SSD1306/SH1106 displays. This value is
# #   associated with a "smearing" effect on some OLED displays. The
# #   value may range from 0 to 63. Default is 0.
# #   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0





###############################################    
### Display control
### Adds Fan controls for Auxfan to Displays Control section
###############################################

[menu __main __control __auxfanonoff]
type: input
enable: {'fan_generic Aux_Fan' in printer}
name: Aux Fan: {'ON ' if menu.input else 'OFF'}
input: {printer['fan_generic Aux_Fan'].speed}
input_min: 0
input_max: 1
input_step: 1
index: 9 # Place it right beneath partcooling fan controls
gcode:
    M106 P2 S{255 if menu.input else 0}

[menu __main __control __auxfanspeed]
type: input
enable: {'fan_generic Aux_Fan' in printer}
name: Aux speed: {'%3d' % (menu.input*100)}%
input: {printer['fan_generic Aux_Fan'].speed}
input_min: 0
input_max: 1
input_step: 0.01
index: 10 # Place it right beneath partcooling fan controls
gcode:
    SET_FAN_SPEED FAN=Aux_Fan SPEED={menu.input}
